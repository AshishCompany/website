.container {
    max-width: 800px;
    margin: auto;
}


.micro-padding {
    padding: $spacing-micro;
}

.tiny-padding {
    padding: $spacing-tiny;
}

.small-padding {
    padding: $spacing-small;
}

.base-padding {
    padding: $spacing-base;
}

.base-top-margin {
    margin-top: $spacing-base;
}

.big-top-margin {
    margin-top: $spacing-big;
}

.base-bottom-margin {
    margin-bottom: $spacing-base;
}

.big-bottom-margin {
    margin-bottom: $spacing-big;
}

.base-top-padding {
    padding-top: $spacing-base;
}

.big-top-padding {
    padding-top: $spacing-big;
}

// vertical only padding and margin
@each $thing in margin,
padding {
    .tiny-v-#{$thing} {
        #{$thing}-top: $spacing-tiny;
        #{$thing}-bottom: $spacing-tiny;
    }

    .small-v-#{$thing} {
        #{$thing}-top: $spacing-small;
        #{$thing}-bottom: $spacing-small;
    }

    .base-v-#{$thing} {
        #{$thing}-top: $spacing-base;
        #{$thing}-bottom: $spacing-base;
    }

    .big-v-#{$thing} {
        #{$thing}-top: $spacing-big;
        #{$thing}-bottom: $spacing-big;
    }
}

// horizontal only padding and margin
@each $thing in margin,
padding {
    .tiny-h-#{$thing} {
        #{$thing}-left: $spacing-tiny;
        #{$thing}-right: $spacing-tiny;
    }

    .small-h-#{$thing} {
        #{$thing}-left: $spacing-small;
        #{$thing}-right: $spacing-small;
    }

    .base-h-#{$thing} {
        #{$thing}-left: $spacing-base;
        #{$thing}-right: $spacing-base;
    }

    .big-h-#{$thing} {
        #{$thing}-left: $spacing-big;
        #{$thing}-right: $spacing-big;
    }
}

@each $thing in margin,
padding {

    @each $size in tiny,
    small,
    base,
    big {

        .#{$size}-#{$thing}> :first-child,
        .#{$size}-v-#{$thing}> :first-child {
            margin-top: 0;
            padding-top: 0;
        }

        .#{$size}-#{$thing}> :last-child,
        .#{$size}-v-#{$thing}> :last-child {
            margin-bottom: 0;
            padding-bottom: 0;
        }
    }
}


.tiny-spaced-children>* {
    margin-left: $spacing-tiny;
}

.tiny-spaced-children> :first-child {
    margin-left: 0;
}

.small-spaced-children>* {
    margin-left: $spacing-small;
}

.small-spaced-children> :first-child {
    margin-left: 0;
}

.base-spaced-children>* {
    margin-left: $spacing-base;
}

.base-spaced-children> :first-child {
    margin-left: 0;
}


.no-margin {
    margin: 0;
}

.no-margin-top {
    margin-top: 0;
}

.no-padding {
    padding: 0;
}



.flex {
    display: flex
}

.flex.align-items-center {
    align-items: center;
}

.flex.justify-space-between {
    justify-content: space-between;
}

.flex.justify-space-around {
    justify-content: space-around;
}

.flex.direction-col-reverse {
    flex-direction: column-reverse;
}

.flex-horizontal {
    display: flex;
    flex-direction: column;
}

.flex.wrap {
    flex-wrap: wrap;
}

.flex>.full {
    flex: 100%;
}


.grid.list>* {
    margin-bottom: $spacing-base;
}


@include mobile {
    .container {
        padding-left: $spacing-tiny;
        padding-right: $spacing-tiny;
    }
}

@include desktop {
    .container {
        max-width: $screen-size-bg;
    }

    @supports (display: grid) {
        .grid {
            display: grid;
            grid-template-columns: repeat(6, minmax(100px, 1fr));
            grid-gap: $spacing-base;

            grid-auto-rows: max-content;
        }

        .grid.list>* {
            margin-bottom: 0;
        }

        .grid.center {
            grid-template-areas: ". b b b b .";
        }

        .grid.center> :first-child {
            grid-area: b;
        }

        .grid.split3 {}

        .grid.split3>* {
            grid-column: span 2;
        }

        .grid.split2 {
            grid-template-areas: "a a a b b b"
        }

        .grid.split2>* {
            grid-column: span 3;
        }

        .grid.split2>.small {
            grid-column: span 2;
        }

        .grid.split2>.big {
            grid-column: span 4;
        }


        .grid>.span-half {
            grid-column: span 3;
        }
    }
}
