[gd_scene load_steps=13 format=2]

[ext_resource path="res://HeightMap.gd" type="Script" id=1]
[ext_resource path="res://DiscreteTexture.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;


uniform sampler2D colormap : hint_black;
uniform float height_map_min = 0.0;
uniform float height_map_max = 1.0;


void fragment() {
	float noise = (texture(TEXTURE, UV).r - height_map_min) / (height_map_max - height_map_min);
	COLOR = texture(colormap, vec2(noise, 0.0));
}"

[sub_resource type="Image" id=2]
data = {
"data": PoolByteArray
"format": "RGBA8",
"height": 1,
"mipmaps": false,
"width": 256
}

[sub_resource type="ImageTexture" id=3]
flags = 0
flags = 0
image = SubResource( 2 )
size = Vector2( 256, 1 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 1 )
shader_param/height_map_min = 0.12549
shader_param/height_map_max = 0.858824
shader_param/colormap = SubResource( 3 )

[sub_resource type="OpenSimplexNoise" id=5]
period = 50.2
lacunarity = 2.84

[sub_resource type="NoiseTexture" id=6]
width = 256
height = 256
noise = SubResource( 5 )

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0, 0.206452, 0.516129, 0.56129, 0.754839, 0.883871, 1 )
colors = PoolColorArray( 0.0640335, 0.0563965, 0.300781, 1, 0.237732, 0.461212, 0.640625, 1, 0.734375, 0.712277, 0.567993, 1, 0.24353, 0.59375, 0.421376, 1, 0.375519, 0.417969, 0.397075, 1, 0.953659, 0.980469, 0.974185, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )
width = 256
script = ExtResource( 2 )

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;


uniform vec4 edge_color : hint_color;
uniform vec2 delta = vec2(0.5);


float sobel(sampler2D tex, vec2 uv, vec2 pixel_size) {
	vec2 delta_pixel = delta * pixel_size;
	
	vec4 h = vec4(0.0);
	vec4 v = vec4(0.0);
	
	h +=       texture(tex, uv + vec2(-1.0, -1.0) * delta_pixel);
	h -=       texture(tex, uv + vec2( 0.0, -1.0) * delta_pixel);
	h += 2.0 * texture(tex, uv + vec2(-1.0,  0.0) * delta_pixel);
	h -= 2.0 * texture(tex, uv + vec2( 1.0,  0.0) * delta_pixel);
	h +=       texture(tex, uv + vec2(-1.0,  1.0) * delta_pixel);
	h -=       texture(tex, uv + vec2( 1.0,  1.0) * delta_pixel);
	
	v +=       texture(tex, uv + vec2(-1.0, -1.0) * delta_pixel);
	v += 2.0 * texture(tex, uv + vec2( 0.0, -1.0) * delta_pixel);
	v +=       texture(tex, uv + vec2( 1.0, -1.0) * delta_pixel);
	v -=       texture(tex, uv + vec2(-1.0,  1.0) * delta_pixel);
	v -= 2.0 * texture(tex, uv + vec2( 0.0,  1.0) * delta_pixel);
	v -=       texture(tex, uv + vec2( 1.0,  1.0) * delta_pixel);
	
	return sqrt(dot(h, h) + dot(v, v));
}


void fragment() {
	float s = sobel(SCREEN_TEXTURE, SCREEN_UV, SCREEN_PIXEL_SIZE);
	COLOR = texture(SCREEN_TEXTURE, SCREEN_UV);
	COLOR = mix(COLOR, edge_color, s);
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )
shader_param/edge_color = Color( 0.490196, 0.054902, 0.054902, 1 )
shader_param/delta = Vector2( 0.5, 0.5 )

[node name="WorldMap" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HeightMap" type="TextureRect" parent="."]
material = SubResource( 4 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 6 )
stretch_mode = 1
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
colormap = SubResource( 8 )

[node name="PostProcess" type="ColorRect" parent="."]
visible = false
material = SubResource( 10 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}
